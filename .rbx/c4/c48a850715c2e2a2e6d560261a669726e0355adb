!RBIX
10820701098813984305
18
M
1
n
n
x
10
__script__
i
1678
5
7
0
64
47
49
1
1
15
5
7
2
64
47
49
1
1
15
5
7
3
64
47
49
4
1
15
45
5
6
43
7
13
71
8
47
9
50
47
49
9
0
13
47
49
10
0
15
8
53
49
8
0
38
11
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
15
64
49
16
2
15
49
17
1
19
0
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
18
64
49
16
2
15
49
17
1
19
1
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
19
64
49
16
2
15
49
17
1
19
2
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
20
64
49
16
2
15
49
17
1
19
3
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
21
64
49
16
2
15
49
17
1
19
4
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
22
64
49
16
2
15
49
17
1
19
5
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
23
64
49
16
2
15
49
17
1
19
6
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
24
64
49
16
2
15
49
17
1
19
7
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
25
64
49
16
2
15
49
17
1
19
8
15
39
11
44
43
12
79
49
13
1
13
7
14
64
7
26
64
49
16
2
15
49
17
1
19
9
15
39
11
44
43
12
80
49
13
1
13
7
14
64
7
27
64
49
16
2
15
13
7
28
64
4
10
49
16
2
15
49
17
1
19
10
15
39
11
7
29
64
20
1
20
10
49
30
3
15
39
11
7
31
64
20
10
20
8
49
30
3
15
39
11
7
32
64
20
10
20
4
44
43
12
79
49
13
1
13
7
33
64
4
50
49
16
2
15
49
30
4
15
39
11
7
32
64
20
10
20
5
44
43
12
79
49
13
1
13
7
33
64
4
40
49
16
2
15
49
30
4
15
39
11
7
32
64
20
10
20
6
44
43
12
79
49
13
1
13
7
33
64
4
10
49
16
2
15
49
30
4
15
39
11
44
43
12
80
49
13
1
13
7
14
64
7
34
64
49
16
2
15
13
7
28
64
4
15
49
16
2
15
49
17
1
19
11
15
39
11
7
29
64
20
2
20
11
49
30
3
15
39
11
7
31
64
20
11
20
8
49
30
3
15
39
11
7
32
64
20
11
20
4
44
43
12
79
49
13
1
13
7
33
64
4
50
49
16
2
15
49
30
4
15
39
11
7
32
64
20
11
20
7
44
43
12
79
49
13
1
13
7
33
64
4
50
49
16
2
15
49
30
4
15
39
11
7
35
64
20
1
20
10
44
43
12
79
49
13
1
13
7
36
64
4
20
49
16
2
15
49
30
4
15
39
11
7
35
64
20
2
20
11
44
43
12
79
49
13
1
13
7
36
64
4
25
49
16
2
15
49
30
4
15
39
11
7
35
64
20
3
20
10
44
43
12
79
49
13
1
13
7
36
64
4
10
49
16
2
15
49
30
4
15
39
11
7
35
64
20
3
20
11
44
43
12
79
49
13
1
13
7
36
64
4
15
49
16
2
15
49
30
4
15
39
11
7
37
64
20
1
20
10
44
43
12
79
49
13
1
13
7
36
64
4
50
49
16
2
15
49
30
4
15
39
11
7
37
64
20
2
20
11
44
43
12
79
49
13
1
13
7
36
64
4
55
49
16
2
15
49
30
4
15
39
11
7
37
64
20
3
20
10
44
43
12
79
49
13
1
13
7
36
64
4
20
49
16
2
15
49
30
4
15
39
11
7
37
64
20
3
20
11
44
43
12
79
49
13
1
13
7
36
64
4
25
49
16
2
15
49
30
4
15
39
11
7
37
64
20
1
20
10
44
43
12
79
49
13
1
13
7
36
64
4
50
49
16
2
15
49
30
4
15
39
11
7
37
64
20
2
20
11
44
43
12
79
49
13
1
13
7
36
64
4
55
49
16
2
15
49
30
4
15
39
11
7
37
64
20
3
20
10
44
43
12
79
49
13
1
13
7
36
64
4
20
49
16
2
15
49
30
4
15
39
11
7
37
64
20
3
20
11
44
43
12
79
49
13
1
13
7
36
64
4
25
49
16
2
15
49
30
4
15
39
11
7
38
64
20
10
20
9
44
43
12
79
49
13
1
13
7
36
64
7
39
49
16
2
15
49
30
4
15
39
11
7
38
64
20
11
20
9
44
43
12
79
49
13
1
13
7
36
64
7
40
49
16
2
15
49
30
4
15
39
11
7
41
64
20
8
20
10
44
43
12
79
49
13
1
13
7
36
64
4
200
49
16
2
15
49
30
4
15
39
11
7
41
64
20
8
20
11
44
43
12
79
49
13
1
13
7
36
64
4
200
49
16
2
15
49
30
4
15
39
11
7
42
64
20
10
20
8
44
43
12
79
49
13
1
13
7
36
64
4
50
49
16
2
15
49
30
4
15
39
11
7
42
64
20
11
20
8
44
43
12
79
49
13
1
13
7
36
64
4
50
49
16
2
15
49
30
4
15
39
11
7
43
64
20
10
20
4
44
43
12
79
49
13
1
13
7
36
64
80
49
16
2
15
49
30
4
15
39
11
7
43
64
20
10
20
5
44
43
12
79
49
13
1
13
7
36
64
79
49
16
2
15
49
30
4
15
39
11
7
43
64
20
10
20
6
44
43
12
79
49
13
1
13
7
36
64
79
49
16
2
15
49
30
4
15
39
11
7
43
64
20
11
20
7
44
43
12
79
49
13
1
13
7
36
64
4
3
49
16
2
15
49
30
4
15
39
11
7
43
64
20
11
20
5
44
43
12
79
49
13
1
13
7
36
64
80
49
16
2
15
49
30
4
15
39
11
7
44
64
20
11
20
0
44
43
12
79
49
13
1
13
7
36
64
7
45
49
16
2
15
49
30
4
15
39
11
7
44
64
20
10
20
0
44
43
12
79
49
13
1
13
7
36
64
7
46
49
16
2
15
49
30
4
15
99
7
47
7
48
65
67
49
49
0
49
50
4
15
99
7
51
7
52
65
67
49
49
0
49
50
4
15
99
7
53
7
54
65
67
49
49
0
49
50
4
15
99
7
55
7
56
65
67
49
49
0
49
50
4
15
39
11
49
57
0
56
58
50
59
0
15
5
7
60
64
47
49
61
1
15
5
7
62
5
20
1
47
49
51
1
47
101
63
7
64
63
3
47
49
61
1
15
5
7
65
5
20
2
47
49
51
1
47
101
63
7
64
63
3
47
49
61
1
15
5
7
66
5
20
3
47
49
51
1
47
101
63
7
67
63
3
47
49
61
1
15
5
7
60
64
47
49
61
1
15
5
7
68
5
20
10
47
49
53
1
47
101
63
7
69
63
3
47
49
61
1
15
5
7
70
5
20
11
47
49
53
1
47
101
63
7
69
63
3
47
49
61
1
15
5
7
60
64
47
49
61
1
15
5
7
71
5
20
10
47
49
55
1
47
101
63
63
2
47
49
61
1
15
5
7
72
5
20
11
47
49
55
1
47
101
63
63
2
47
49
61
1
15
5
7
60
64
47
49
61
1
15
5
7
73
5
20
1
47
49
47
1
7
74
64
49
75
1
47
101
63
63
2
47
49
61
1
15
5
7
76
5
20
2
47
49
47
1
7
74
64
49
75
1
47
101
63
63
2
47
49
61
1
15
5
7
77
5
20
3
47
49
47
1
7
74
64
49
75
1
47
101
63
63
2
47
49
61
1
15
5
7
60
64
47
49
61
1
15
2
11
I
15
I
d
I
0
I
0
I
0
n
p
78
s
E
8
US-ASCII
8
rubygems
x
7
require
s
E
8
US-ASCII
9
neography
s
E
8
US-ASCII
15
neo4j_config.rb
x
4
load
x
9
Neography
n
x
4
Rest
x
3
new
x
8
allocate
x
10
initialize
x
4
@neo
x
4
Hash
x
16
new_from_literal
s
E
8
US-ASCII
4
name
s
E
8
US-ASCII
20
giv2giv Incorporated
x
3
[]=
x
11
create_node
s
E
8
US-ASCII
7
Michael
s
E
8
US-ASCII
3
Dan
s
E
8
US-ASCII
4
Josh
s
E
8
US-ASCII
20
Habitat for Humanity
s
E
8
US-ASCII
23
Doctors without Borders
s
E
8
US-ASCII
21
Amnesty International
s
E
8
US-ASCII
4
PETA
s
E
8
US-ASCII
27
giv2giv Green Energy Fund A
s
E
8
US-ASCII
6
Dwolla
s
E
8
US-ASCII
27
Amnesty for Habitat Doctors
s
E
8
US-ASCII
14
minimum_amount
s
E
8
US-ASCII
4
OWNS
x
19
create_relationship
s
E
8
US-ASCII
10
INVESTS_IN
s
E
8
US-ASCII
11
DONATES_OUT
s
E
8
US-ASCII
7
percent
s
E
8
US-ASCII
12
PETA Doctors
s
E
8
US-ASCII
10
DONATES_IN
s
E
8
US-ASCII
6
amount
s
E
8
US-ASCII
12
TRANSACTS_IN
s
E
8
US-ASCII
20
PAYS_TRANSACTION_FEE
d
 +0.500000000000000000000000000000000000000000000000000000    -1
d
 +0.500000000000000000000000000000000000000000000000000000    -1
s
E
8
US-ASCII
7
RETURNS
s
E
8
US-ASCII
19
PAYS_INVESTMENT_FEE
s
E
8
US-ASCII
13
TRANSACTS_OUT
s
E
8
US-ASCII
17
PAYS_OVERHEAD_FEE
d
 +0.920000000000000039968028886505635455250740051269531250    -2
d
 +0.920000000000000039968028886505635455250740051269531250    -2
x
24
charities_contributed_to
M
1
n
n
x
24
charities_contributed_to
i
54
20
0
7
0
64
49
1
1
7
2
64
49
3
1
49
4
0
49
5
0
19
1
15
39
6
7
7
64
44
43
8
79
49
9
1
13
7
10
20
1
49
11
2
15
49
12
2
7
13
64
49
1
1
11
I
8
I
2
I
1
I
0
I
1
n
p
14
s
E
8
US-ASCII
4
self
x
2
[]
s
E
8
US-ASCII
1
/
x
5
split
x
4
last
x
4
to_i
x
4
@neo
s
E
8
US-ASCII
143
START me = node({node_id})
        MATCH (me)-[:DONATES_IN]->(endowment)-[:DONATES_OUT]->(charities_supported)
	RETURN charities_supported.name
x
4
Hash
x
16
new_from_literal
x
7
node_id
x
3
[]=
x
13
execute_query
s
E
8
US-ASCII
4
data
p
15
I
-1
I
90
I
0
I
91
I
17
I
94
I
1c
I
96
I
2c
I
94
I
2f
I
96
I
32
I
94
I
36
x
73
/home/josh/workprojects/rubyprojects/new_giv2giv/api/neography_example.rb
p
2
x
4
node
x
7
node_id
x
17
method_visibility
x
15
add_defn_method
x
15
transactions_in
M
1
n
n
x
15
transactions_in
i
54
20
0
7
0
64
49
1
1
7
2
64
49
3
1
49
4
0
49
5
0
19
1
15
39
6
7
7
64
44
43
8
79
49
9
1
13
7
10
20
1
49
11
2
15
49
12
2
7
13
64
49
1
1
11
I
8
I
2
I
1
I
0
I
1
n
p
14
s
E
8
US-ASCII
4
self
x
2
[]
s
E
8
US-ASCII
1
/
x
5
split
x
4
last
x
4
to_i
x
4
@neo
s
E
8
US-ASCII
130
START me = node({node_id})
        MATCH (me)-[transaction_in:TRANSACTS_IN]->(endowment)
        RETURN SUM(transaction_in.amount)
x
4
Hash
x
16
new_from_literal
x
7
node_id
x
3
[]=
x
13
execute_query
s
E
8
US-ASCII
4
data
p
15
I
-1
I
9b
I
0
I
9c
I
17
I
9e
I
1c
I
a0
I
2c
I
9e
I
2f
I
a0
I
32
I
9e
I
36
x
73
/home/josh/workprojects/rubyprojects/new_giv2giv/api/neography_example.rb
p
2
x
4
node
x
7
node_id
x
16
transactions_out
M
1
n
n
x
16
transactions_out
i
54
20
0
7
0
64
49
1
1
7
2
64
49
3
1
49
4
0
49
5
0
19
1
15
39
6
7
7
64
44
43
8
79
49
9
1
13
7
10
20
1
49
11
2
15
49
12
2
7
13
64
49
1
1
11
I
8
I
2
I
1
I
0
I
1
n
p
14
s
E
8
US-ASCII
4
self
x
2
[]
s
E
8
US-ASCII
1
/
x
5
split
x
4
last
x
4
to_i
x
4
@neo
s
E
8
US-ASCII
131
START me = node({node_id})
        MATCH (me)-[transaction_out:TRANSACTS_OUT]->(charity)
        RETURN SUM(transaction_out.amount)
x
4
Hash
x
16
new_from_literal
x
7
node_id
x
3
[]=
x
13
execute_query
s
E
8
US-ASCII
4
data
p
15
I
-1
I
a3
I
0
I
a4
I
17
I
a6
I
1c
I
a8
I
2c
I
a6
I
2f
I
a8
I
32
I
a6
I
36
x
73
/home/josh/workprojects/rubyprojects/new_giv2giv/api/neography_example.rb
p
2
x
4
node
x
7
node_id
x
15
endowment_value
M
1
n
n
x
15
endowment_value
i
54
20
0
7
0
64
49
1
1
7
2
64
49
3
1
49
4
0
49
5
0
19
1
15
39
6
7
7
64
44
43
8
79
49
9
1
13
7
10
20
1
49
11
2
15
49
12
2
7
13
64
49
1
1
11
I
8
I
2
I
1
I
0
I
1
n
p
14
s
E
8
US-ASCII
4
self
x
2
[]
s
E
8
US-ASCII
1
/
x
5
split
x
4
last
x
4
to_i
x
4
@neo
s
E
8
US-ASCII
289
START me = node({node_id})

        MATCH (donor)-[transaction_in:TRANSACTS_IN]->(me)
	WITH me, SUM(transaction_in.amount) AS Total_In

        MATCH (me)-[transaction_out:TRANSACTS_OUT]->(charity)
	WITH SUM(transaction_out.amount) AS Total_Out, Total_In

        RETURN Total_In-Total_Out
x
4
Hash
x
16
new_from_literal
x
7
node_id
x
3
[]=
x
13
execute_query
s
E
8
US-ASCII
4
data
p
15
I
-1
I
ab
I
0
I
ac
I
17
I
ae
I
1c
I
b6
I
2c
I
ae
I
2f
I
b6
I
32
I
ae
I
36
x
73
/home/josh/workprojects/rubyprojects/new_giv2giv/api/neography_example.rb
p
2
x
4
node
x
7
node_id
x
10
list_nodes
M
1
p
2
x
9
for_block
t
n
x
9
__block__
i
25
57
22
1
12
15
21
1
12
7
0
64
81
1
5
21
1
12
47
49
2
1
81
1
31
11
I
4
I
0
I
1
I
0
I
1
n
p
3
s
E
8
US-ASCII
11
contributed
x
1
+
x
15
transactions_in
p
5
I
-1
I
b9
I
5
I
ba
I
19
x
73
/home/josh/workprojects/rubyprojects/new_giv2giv/api/neography_example.rb
p
0
x
4
each
s
E
8
US-ASCII
0

x
4
puts
s
E
8
US-ASCII
35
In two months, Michael contributed 
x
4
to_s
s
E
8
US-ASCII
23
 into his own endowment
s
E
8
US-ASCII
31
In two months, Dan contributed 
s
E
8
US-ASCII
32
In two months, Josh contributed 
s
E
8
US-ASCII
36
 into Michael's and Dan's endowments
s
E
8
US-ASCII
52
After two months, Michael's endownment has paid out 
s
E
8
US-ASCII
17
 to his charities
s
E
8
US-ASCII
48
After two months, Dan's endownment has paid out 
s
E
8
US-ASCII
50
After payouts and fees, Michael's endowment holds 
s
E
8
US-ASCII
46
After payouts and fees, Dan's endowment holds 
s
E
8
US-ASCII
76
Through all his endowments, Michael contributes to the following charities: 
s
E
8
US-ASCII
2
, 
x
4
join
s
E
8
US-ASCII
72
Through all his endowments, Dan contributes to the following charities: 
s
E
8
US-ASCII
73
Through all his endowments, Josh contributes to the following charities: 
p
141
I
0
I
1
I
9
I
2
I
12
I
7
I
1b
I
9
I
38
I
16
I
52
I
19
I
6c
I
1a
I
86
I
1b
I
a0
I
1e
I
ba
I
1f
I
d4
I
20
I
ee
I
21
I
108
I
24
I
122
I
27
I
13c
I
2e
I
160
I
31
I
16d
I
35
I
17a
I
38
I
198
I
39
I
1b6
I
3a
I
1d4
I
3f
I
1f8
I
42
I
205
I
46
I
212
I
49
I
230
I
4a
I
24e
I
50
I
26c
I
51
I
28a
I
55
I
2a8
I
56
I
2c6
I
5e
I
2e4
I
5f
I
302
I
60
I
320
I
61
I
33e
I
68
I
35c
I
69
I
37a
I
6a
I
398
I
6b
I
3b6
I
6e
I
3d4
I
6f
I
3f2
I
72
I
410
I
73
I
42e
I
76
I
44c
I
77
I
46a
I
7e
I
487
I
7f
I
4a4
I
80
I
4c1
I
81
I
4df
I
82
I
4fc
I
87
I
51a
I
88
I
538
I
90
I
546
I
9b
I
554
I
a3
I
562
I
ab
I
570
I
b9
I
57b
I
bd
I
584
I
be
I
59a
I
bf
I
5b0
I
c0
I
5c6
I
c1
I
5cf
I
c2
I
5e5
I
c3
I
5fb
I
c4
I
604
I
c5
I
618
I
c6
I
62c
I
c7
I
635
I
c8
I
64f
I
c9
I
669
I
ca
I
683
I
cb
I
68e
x
73
/home/josh/workprojects/rubyprojects/new_giv2giv/api/neography_example.rb
p
13
x
7
giv2giv
x
7
michael
x
3
dan
x
4
josh
x
7
habitat
x
7
doctors
x
7
amnesty
x
4
peta
x
15
investment_fund
x
21
transaction_processor
x
17
michael_endowment
x
13
dan_endowment
x
4
node
